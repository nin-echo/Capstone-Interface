(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["easydropdown"] = factory();
	else
		root["easydropdown"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var factory_1 = __webpack_require__(17);
module.exports = factory_1.default;


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CollisionType_1 = __webpack_require__(10);
function detectBodyCollision(dom, config) {
    var bbHead = dom.head.getBoundingClientRect();
    var wh = window.innerHeight;
    var deltaTop = bbHead.top;
    var deltaBottom = wh - bbHead.bottom;
    if (!dom.firstOption)
        return CollisionType_1.default.NONE;
    var maxHeight = config.behavior.maxVisibleOptions * dom.optionHeight;
    if (deltaTop <= maxHeight) {
        return CollisionType_1.default.TOP;
    }
    else if (deltaBottom <= maxHeight) {
        return CollisionType_1.default.BOTTOM;
    }
    return CollisionType_1.default.NONE;
}
exports.default = detectBodyCollision;


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var composeClassName = function (tokens) {
    return tokens
        .reduce(function (classNames, token) {
        if (typeof token === 'string')
            classNames.push(token);
        else {
            var predicate = token[0], className = token[1];
            if (predicate)
                classNames.push(className);
        }
        return classNames;
    }, [])
        .join(' ');
};
exports.default = composeClassName;


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ArrayStrategy;
(function (ArrayStrategy) {
    ArrayStrategy["PUSH"] = "PUSH";
    ArrayStrategy["REPLACE"] = "REPLACE";
})(ArrayStrategy || (ArrayStrategy = {}));
exports.default = ArrayStrategy;
//# sourceMappingURL=ArrayStrategy.js.map

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var cache = [];
exports.default = cache;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Config_1 = __webpack_require__(20);
var ArrayStrategy_1 = __webpack_require__(3);
var FluentMerge_1 = __webpack_require__(21);
var handleMergeError_1 = __webpack_require__(22);
var Messages = __webpack_require__(6);
function merge(target, source, options) {
    if (options === void 0) { options = null; }
    var sourceKeys = [];
    var config;
    if (options instanceof Config_1.default) {
        config = options;
    }
    else {
        config = new Config_1.default();
    }
    if (typeof options === 'boolean' && options === true) {
        config.deep = true;
    }
    else if (options && config !== options && typeof options === 'object') {
        merge(config, options);
        if ([ArrayStrategy_1.default.PUSH, ArrayStrategy_1.default.REPLACE].indexOf(config.arrayStrategy) < 0) {
            throw RangeError(Messages.INVALID_ARRAY_STRATEGY(config.arrayStrategy));
        }
    }
    if (!target || typeof target !== 'object') {
        throw new TypeError(Messages.TYPE_ERROR_TARGET(target));
    }
    if (!source || typeof source !== 'object') {
        throw new TypeError(Messages.TYPE_ERROR_SOURCE(source));
    }
    if (Array.isArray(source)) {
        if (config.arrayStrategy === ArrayStrategy_1.default.PUSH) {
            // Merge arrays via push()
            target.push.apply(target, source);
            return target;
        }
        for (var i = 0; i < source.length; i++) {
            sourceKeys.push(i.toString());
        }
    }
    else {
        sourceKeys = Object.getOwnPropertyNames(source);
    }
    for (var _i = 0, sourceKeys_1 = sourceKeys; _i < sourceKeys_1.length; _i++) {
        var key = sourceKeys_1[_i];
        var descriptor = Object.getOwnPropertyDescriptor(source, key);
        // Skip read-only properties
        if (typeof descriptor.get === 'function' && !descriptor.set && !config.includeReadOnly)
            continue;
        // Skip non-enumerable properties
        if (!descriptor.enumerable && !config.includeNonEmurable)
            continue;
        if (!config.deep ||
            typeof source[key] !== 'object' ||
            source[key] === null ||
            (Array.isArray(source[key]) && config.useReferenceIfArray) ||
            (!target[key] && config.useReferenceIfTargetUnset)) {
            // If:
            // - Shallow merge
            // - All non-object primatives
            // - Null pointers
            // - Arrays, if `useReferenceIfArray` set
            // - Target prop null or undefined and `useRererenceIfTargetUnset` set
            try {
                target[key] = source[key];
            }
            catch (err) {
                handleMergeError_1.default(err, target, key, config.errorMessage);
            }
        }
        else {
            // Deep merge objects/arrays
            if (!Object.prototype.hasOwnProperty.call(target, key) || target[key] === null) {
                // If property does not exist on target, instantiate an empty
                // object or array to merge into
                try {
                    target[key] = Array.isArray(source[key]) ? [] : {};
                }
                catch (err) {
                    handleMergeError_1.default(err, target, key, config.errorMessage);
                }
            }
            // Recursively deep copy objects or arrays
            merge(target[key], source[key], config);
        }
    }
    return target;
}
var createFluent = function (method) { return function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return (_a = new FluentMerge_1.default())[method].apply(_a, args);
    var _a;
}; };
Object
    .keys(FluentMerge_1.default.prototype)
    .forEach(function (method) { return merge[method] = createFluent(method); });
exports.default = merge;
//# sourceMappingURL=merge.js.map

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MERGE_ERROR = function (offender, suggestion) {
    if (suggestion === void 0) { suggestion = ''; }
    return "Unknown property \"" + offender + "\"" + (suggestion ? ". Did you mean \"" + suggestion + "\"?" : '');
};
exports.TYPE_ERROR_TARGET = function (target) {
    return "[Helpful Merge] Target \"" + target + "\" must be a valid object";
};
exports.TYPE_ERROR_SOURCE = function (source) {
    return "[Helpful Merge] Source \"" + source + "\" must be a valid object";
};
exports.INVALID_ARRAY_STRATEGY = function (strategy) {
    return "[Helpful Merge] Invalid array strategy \"" + strategy + "\"";
};
//# sourceMappingURL=Messages.js.map

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Behavior_1 = __webpack_require__(23);
var Callbacks_1 = __webpack_require__(24);
var ClassNames_1 = __webpack_require__(25);
var Config = /** @class */ (function () {
    function Config() {
        this.callbacks = new Callbacks_1.default();
        this.classNames = new ClassNames_1.default();
        this.behavior = new Behavior_1.default();
        Object.seal(this);
    }
    return Config;
}());
exports.default = Config;


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Returns the closest parent of a given element matching the
 * provided selector, optionally including the element itself.
 */
Object.defineProperty(exports, "__esModule", { value: true });
function closestParent(el, selector, includeSelf) {
    if (includeSelf === void 0) { includeSelf = false; }
    var parent = el.parentNode;
    if (includeSelf && el.matches(selector)) {
        return el;
    }
    while (parent && parent !== document.body) {
        if (parent.matches && parent.matches(selector)) {
            return parent;
        }
        else if (parent.parentNode) {
            parent = parent.parentNode;
        }
        else {
            return null;
        }
    }
    return null;
}
exports.default = closestParent;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OPTION = '[data-ref="option"]';


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CollisionType;
(function (CollisionType) {
    CollisionType["NONE"] = "NONE";
    CollisionType["TOP"] = "TOP";
    CollisionType["BOTTOM"] = "BOTTOM";
})(CollisionType || (CollisionType = {}));
exports.default = CollisionType;


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var AttributeChangeType;
(function (AttributeChangeType) {
    AttributeChangeType["ADD"] = "ADD";
    AttributeChangeType["EDIT"] = "EDIT";
    AttributeChangeType["REMOVE"] = "REMOVE";
})(AttributeChangeType || (AttributeChangeType = {}));
exports.default = AttributeChangeType;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DomChangeType;
(function (DomChangeType) {
    DomChangeType["NONE"] = "NONE";
    DomChangeType["FULL"] = "FULL";
    DomChangeType["REPLACE"] = "REPLACE";
    DomChangeType["INNER"] = "INNER";
    DomChangeType["OUTER"] = "OUTER";
})(DomChangeType = exports.DomChangeType || (exports.DomChangeType = {}));
exports.default = DomChangeType;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var BodyStatus;
(function (BodyStatus) {
    BodyStatus["CLOSED"] = "CLOSED";
    BodyStatus["OPEN_ABOVE"] = "OPEN_ABOVE";
    BodyStatus["OPEN_BELOW"] = "OPEN_BELOW";
})(BodyStatus || (BodyStatus = {}));
exports.default = BodyStatus;


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ScrollStatus;
(function (ScrollStatus) {
    ScrollStatus["AT_TOP"] = "AT_TOP";
    ScrollStatus["SCROLLED"] = "SCROLLED";
    ScrollStatus["AT_BOTTOM"] = "AT_BOTTOM";
})(ScrollStatus || (ScrollStatus = {}));
exports.default = ScrollStatus;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Group = /** @class */ (function () {
    function Group() {
        this.label = '';
        this.options = [];
        this.isDisabled = false;
    }
    Object.defineProperty(Group.prototype, "totalOptions", {
        get: function () {
            return this.options.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Group.prototype, "hasLabel", {
        get: function () {
            return this.label !== '';
        },
        enumerable: true,
        configurable: true
    });
    return Group;
}());
exports.default = Group;


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Option = /** @class */ (function () {
    function Option() {
        this.label = '';
        this.value = '';
        this.isDisabled = false;
    }
    return Option;
}());
exports.default = Option;


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var cache_1 = __webpack_require__(4);
var Easydropdown_1 = __webpack_require__(67);
var EasydropdownFacade_1 = __webpack_require__(66);
function easydropdown(selectElementOrSelector, options) {
    if (options === void 0) { options = {}; }
    var selectElement = selectElementOrSelector;
    if (typeof selectElementOrSelector === 'string') {
        selectElement = document.querySelector(selectElementOrSelector);
    }
    if (!(selectElement instanceof HTMLSelectElement)) {
        throw new TypeError('[EasyDropDown] Invalid select element provided');
    }
    for (var _i = 0, cache_2 = cache_1.default; _i < cache_2.length; _i++) {
        var cachedInstance = cache_2[_i];
        if (cachedInstance.selectElement === selectElement) {
            return cachedInstance;
        }
    }
    var instance = new Easydropdown_1.default(selectElement, options);
    cache_1.default.push(instance);
    return new EasydropdownFacade_1.default(instance);
}
exports.default = easydropdown;


/***/ }),
/* 18 */,
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var merge_1 = __webpack_require__(5);
var ArrayStrategy_1 = __webpack_require__(3);
exports.ArrayStrategy = ArrayStrategy_1.default;
exports.default = merge_1.default;
//# sourceMappingURL=index.js.map

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ArrayStrategy_1 = __webpack_require__(3);
var Messages = __webpack_require__(6);
var Config = /** @class */ (function () {
    function Config() {
        this.deep = false;
        this.useReferenceIfTargetUnset = false;
        this.useReferenceIfArray = false;
        this.includeReadOnly = false;
        this.includeNonEmurable = false;
        this.arrayStrategy = ArrayStrategy_1.default.REPLACE;
        this.errorMessage = Messages.MERGE_ERROR;
        Object.seal(this);
    }
    return Config;
}());
exports.default = Config;
//# sourceMappingURL=Config.js.map

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var merge_1 = __webpack_require__(5);
var FluentMerge = /** @class */ (function () {
    function FluentMerge() {
        this.target = null;
        this.sources = [];
        this.config = {};
    }
    /**
     * Supplies a fluent merge instance with a target object to merge into and return.
     */
    FluentMerge.prototype.to = function (target) {
        this.target = target;
        return this;
    };
    /**
     * Supplies a fluent merge instance with one or more source objects to merge from, in right to left order.
     */
    FluentMerge.prototype.from = function () {
        var sources = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            sources[_i] = arguments[_i];
        }
        this.sources = sources;
        return this;
    };
    /**
     * Supplies a fluent merge instance with a configuration object of one or more options.
     */
    FluentMerge.prototype.with = function (options) {
        this.config = options;
        return this;
    };
    /**
     * Executes a fluent merge instance, merging all provided sources into the
     * target, as per any provided configuration, and returning a reference to
     * the target.
     */
    FluentMerge.prototype.exec = function () {
        var _this = this;
        return this.sources.reduce(function (target, source) { return merge_1.default(target, source, _this.config); }, this.target || {});
    };
    return FluentMerge;
}());
exports.default = FluentMerge;
//# sourceMappingURL=FluentMerge.js.map

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function handleMergeError(err, target, offendingKey, message) {
    // Rethrow if any of the following:
    // - offending key already exists on target
    // - object not sealed
    // - is extensible
    // - error not a TypeError
    if (Object.hasOwnProperty.call(target, offendingKey) ||
        !Object.isSealed(target) ||
        Object.isExtensible(target) ||
        !(err instanceof TypeError))
        throw err;
    var reducer = reduceBestMatch.bind(null, offendingKey, offendingKey.toLowerCase());
    var primer = { key: '', delta: Infinity, totalMatching: 0 };
    // Iterate through keys in target, for each key, compare with
    // the offending key. Greatest number of matching characters wins.
    var bestMatch = Object.keys(target).reduce(reducer, primer);
    var suggestion = bestMatch && bestMatch.totalMatching > 1 ? bestMatch.key : '';
    throw new TypeError(message(offendingKey, suggestion));
}
/**
 * Compares current key with current best match.
 */
function reduceBestMatch(offendingKeyLower, offendingKey, currBestMatch, currKey) {
    var totalMatching = getTotalMatching(currKey.toLowerCase(), offendingKeyLower);
    var delta = Math.abs(currKey.length - offendingKey.length);
    if (totalMatching > currBestMatch.totalMatching ||
        (totalMatching === currBestMatch.totalMatching && delta < currBestMatch.delta)) {
        // If a greater number of matching characters, or the same
        // number, but a lesser delta, usurp the best match
        return { key: currKey, delta: delta, totalMatching: totalMatching };
    }
    return currBestMatch;
}
/**
 * Returns the number of common, consecutive characters
 * between two strings.
 */
function getTotalMatching(possibleKey, offendingKey) {
    var longer = possibleKey.length > offendingKey.length ? possibleKey : offendingKey;
    var shorter = longer === possibleKey ? offendingKey : possibleKey;
    var leftPointer = 0;
    var leftInnerPointer = 0;
    var leftTotalMatching = 0;
    var lastCommonIndex = -1;
    for (; leftPointer < longer.length; leftPointer++) {
        while (leftTotalMatching === 0 &&
            longer[leftPointer] !== shorter[leftInnerPointer] &&
            leftInnerPointer < shorter.length) {
            // No match at present, move innerPointer through all possible
            // indices until a match is found
            leftInnerPointer++;
        }
        if (longer[leftPointer] === shorter[leftInnerPointer]) {
            // Match found
            if (lastCommonIndex !== leftPointer - 1) {
                // If beginning of a new match, reset total common
                leftTotalMatching = 0;
            }
            lastCommonIndex = leftPointer;
            leftTotalMatching++;
            leftInnerPointer++;
            // Whole word matched, end
            if (leftTotalMatching === shorter.length)
                break;
        }
        else if (leftTotalMatching > 1) {
            // No match, but at least two common characters found, end
            break;
        }
        else {
            // No match at this index, reset
            leftTotalMatching = leftInnerPointer = 0;
        }
    }
    lastCommonIndex = -1;
    var rightPointer = 0;
    var rightInnerPointer = 0;
    var rightTotalMatching = 0;
    var longerLastIndex = longer.length - 1;
    var shorterLastIndex = shorter.length - 1;
    // As above, but from right to left
    for (; rightPointer < longer.length - leftPointer; rightPointer++) {
        while (rightTotalMatching === 0 &&
            longer[longerLastIndex - rightPointer] !== shorter[shorterLastIndex - rightInnerPointer] &&
            rightInnerPointer < shorter.length) {
            rightInnerPointer++;
        }
        if (longer[longerLastIndex - rightPointer] === shorter[shorterLastIndex - rightInnerPointer]) {
            if (lastCommonIndex !== rightPointer - 1)
                rightTotalMatching = 0;
            lastCommonIndex = rightPointer;
            rightTotalMatching++;
            rightInnerPointer++;
        }
        else if (rightTotalMatching > 1) {
            break;
        }
        else {
            rightTotalMatching = rightInnerPointer = 0;
        }
    }
    return Math.min(shorter.length, leftTotalMatching + rightTotalMatching);
}
exports.getTotalMatching = getTotalMatching;
exports.default = handleMergeError;
//# sourceMappingURL=handleMergeError.js.map

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Behavior = /** @class */ (function () {
    function Behavior() {
        this.showPlaceholderOnOpen = true;
        this.openOnFocus = false;
        this.closeOnSelect = false;
        this.useNativeUiOnMobile = true;
        this.loop = false;
        this.maxVisibleOptions = 10;
    }
    return Behavior;
}());
exports.default = Behavior;


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Callbacks = /** @class */ (function () {
    function Callbacks() {
        this.onReady = null;
        this.onOpen = null;
        this.onClose = null;
        this.onSelect = null;
        Object.seal(this);
    }
    return Callbacks;
}());
exports.default = Callbacks;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ClassNames = /** @class */ (function () {
    function ClassNames() {
        this.root = 'edd';
        this.rootOpen = 'edd-open';
        this.rootOpenAbove = 'edd-open-above';
        this.rootOpenBelow = 'edd-open-below';
        this.rootDisabled = 'edd-disabled';
        this.rootInvalid = 'edd-invalid';
        this.rootFocused = 'edd-focused';
        this.rootHasValue = 'edd-has-value';
        this.head = 'edd-head';
        this.value = 'edd-value';
        this.arrow = 'edd-arrow';
        this.select = 'edd-select';
        this.body = 'edd-body';
        this.bodyScrollable = 'edd-body-scrollable';
        this.bodyAtTop = 'edd-body-at-top';
        this.bodyAtBottom = 'edd-body-at-bottom';
        this.itemsList = 'edd-items-list';
        this.group = 'edd-group';
        this.groupDisabled = 'edd-group-disabled';
        this.groupHasLabel = 'edd-group-has-label';
        this.groupLabel = 'edd-group-label';
        this.option = 'edd-option';
        this.optionDisabled = 'edd-option-disabled';
        this.optionFocused = 'edd-option-focused';
        this.optionSelected = 'edd-option-selected';
        Object.seal(this);
    }
    return ClassNames;
}());
exports.default = ClassNames;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bindEvent_1 = __webpack_require__(27);
var getEventsList_1 = __webpack_require__(31);
var EventManager = /** @class */ (function () {
    function EventManager() {
    }
    EventManager.bindEvents = function (handlerParams) {
        return getEventsList_1.default(handlerParams.dom).map(bindEvent_1.default.bind(null, handlerParams));
    };
    return EventManager;
}());
exports.default = EventManager;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var debounce_1 = __webpack_require__(28);
var throttle_1 = __webpack_require__(29);
var EventBinding_1 = __webpack_require__(30);
var bindEvent = function (handlerParams, eventBindingRaw) {
    var eventBinding = new EventBinding_1.default(eventBindingRaw);
    if (!eventBinding.target)
        return eventBinding;
    var boundHandler = function (e) { return eventBinding.handler(e, handlerParams); };
    if (eventBinding.debounce > 0) {
        eventBinding.boundHandler = debounce_1.default(boundHandler, eventBinding.debounce, true);
    }
    else if (eventBinding.throttle > 0) {
        eventBinding.boundHandler = throttle_1.default(boundHandler, eventBinding.throttle);
    }
    else {
        eventBinding.boundHandler = boundHandler;
    }
    eventBinding.target.addEventListener(eventBinding.type, eventBinding.boundHandler);
    return eventBinding;
};
exports.default = bindEvent;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Returns a function which calls the provided function
 * only after the specified interval has elapsed between
 * function calls. An optional `immediate` boolean will
 * cause the provided function to be called once immediately
 * before waiting.
 */
Object.defineProperty(exports, "__esModule", { value: true });
function debounce(fn, interval, immediate) {
    var _this = this;
    if (immediate === void 0) { immediate = false; }
    var timeoutId = null;
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var later = function () {
            timeoutId = null;
            fn.apply(_this, args);
        };
        if (timeoutId === null && immediate) {
            later();
        }
        clearTimeout(timeoutId);
        timeoutId = setTimeout(later, interval);
    };
}
exports.default = debounce;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var throttle = function (handler, delay) {
    var timerId = null;
    var last;
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var now = Date.now();
        var later = function () {
            timerId = null;
            handler.apply(_this, args);
            last = now;
        };
        if (timerId === null) {
            later();
        }
        else {
            var difference = now - last;
            clearTimeout(timerId);
            timerId = setTimeout(later, delay - difference);
        }
    };
};
exports.default = throttle;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var EventBinding = /** @class */ (function () {
    function EventBinding(eventBindingRaw) {
        this.type = '';
        this.target = null;
        this.debounce = 0;
        this.throttle = 0;
        this.handler = null;
        this.boundHandler = null;
        this.passive = false;
        Object.assign(this, eventBindingRaw);
        Object.seal(this);
    }
    EventBinding.prototype.unbind = function () {
        if (!this.target)
            return;
        this.target.removeEventListener(this.type, this.boundHandler);
    };
    return EventBinding;
}());
exports.default = EventBinding;


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var handleBodyClick_1 = __webpack_require__(32);
var handleBodyMouseover_1 = __webpack_require__(33);
var handleHeadClick_1 = __webpack_require__(34);
var handleHeadMousedown_1 = __webpack_require__(35);
var handleHeadMouseup_1 = __webpack_require__(36);
var handleSelectBlur_1 = __webpack_require__(37);
var handleSelectFocus_1 = __webpack_require__(39);
var handleSelectInvalid_1 = __webpack_require__(71);
var handleSelectKeydown_1 = __webpack_require__(40);
var handleSelectKeypress_1 = __webpack_require__(70);
var handleWindowClick_1 = __webpack_require__(45);
var getEventsList = function (dom) { return [
    {
        target: dom.head,
        type: 'click',
        handler: handleHeadClick_1.default
    },
    {
        target: dom.head,
        type: 'mousedown',
        handler: handleHeadMousedown_1.default
    },
    {
        target: dom.head,
        type: 'mouseup',
        handler: handleHeadMouseup_1.default
    },
    {
        target: document.documentElement,
        type: 'click',
        handler: handleWindowClick_1.default
    },
    {
        target: dom.body,
        type: 'click',
        handler: handleBodyClick_1.default
    },
    {
        target: dom.body,
        type: 'mouseover',
        handler: handleBodyMouseover_1.default
    },
    {
        target: dom.select,
        type: 'keydown',
        handler: handleSelectKeydown_1.default
    },
    {
        target: dom.select,
        type: 'invalid',
        handler: handleSelectInvalid_1.default
    },
    {
        target: dom.select,
        type: 'keypress',
        handler: handleSelectKeypress_1.default
    },
    {
        target: dom.select,
        type: 'focus',
        handler: handleSelectFocus_1.default
    },
    {
        target: dom.select,
        type: 'blur',
        handler: handleSelectBlur_1.default
    }
]; };
exports.default = getEventsList;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var closestParent_1 = __webpack_require__(8);
var Selectors = __webpack_require__(9);
function handleBodyClick(e, _a) {
    var state = _a.state, actions = _a.actions, dom = _a.dom;
    e.stopPropagation();
    var option = closestParent_1.default(e.target, Selectors.OPTION, true);
    if (!option)
        return;
    var optionIndex = Array.prototype.indexOf.call(dom.option, option);
    actions.selectOption(optionIndex);
}
exports.default = handleBodyClick;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var closestParent_1 = __webpack_require__(8);
var Selectors = __webpack_require__(9);
function handleBodyMouseover(e, _a) {
    var state = _a.state, actions = _a.actions, dom = _a.dom;
    e.stopPropagation();
    var option = closestParent_1.default(e.target, Selectors.OPTION, true);
    if (!option || state.isScrollingToView)
        return;
    var optionIndex = Array.prototype.indexOf.call(dom.option, option);
    actions.focusOption(optionIndex);
}
exports.default = handleBodyMouseover;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var detectBodyCollision_1 = __webpack_require__(1);
function handleHeadClick(e, _a) {
    var state = _a.state, actions = _a.actions, dom = _a.dom, config = _a.config;
    e.stopPropagation();
    if (state.isClosed) {
        actions.open(detectBodyCollision_1.default(dom, config), dom.optionHeight);
        dom.select.focus();
    }
    else {
        actions.close();
    }
}
exports.default = handleHeadClick;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var handleHeadMousedown = function () { };
exports.default = handleHeadMousedown;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var handleHeadMouseup = function () { };
exports.default = handleHeadMouseup;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function handleSelectBlur(e, _a) {
    var actions = _a.actions;
    actions.blur();
}
exports.default = handleSelectBlur;


/***/ }),
/* 38 */,
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var detectBodyCollision_1 = __webpack_require__(1);
function handleSelectFocus(e, _a) {
    var actions = _a.actions, config = _a.config, dom = _a.dom;
    actions.focus();
    if (config.behavior.openOnFocus) {
        actions.open(detectBodyCollision_1.default(dom, config), dom.optionHeight);
    }
}
exports.default = handleSelectFocus;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var KeyCodes = __webpack_require__(41);
var detectBodyCollision_1 = __webpack_require__(1);
var handleSelectKeydownDown_1 = __webpack_require__(42);
var handleSelectKeydownUp_1 = __webpack_require__(43);
function handleSelectKeydown(e, handlerParams) {
    var keyCode = e.keyCode;
    var state = handlerParams.state, actions = handlerParams.actions, dom = handlerParams.dom, config = handlerParams.config;
    switch (keyCode) {
        case KeyCodes.DOWN:
            handleSelectKeydownDown_1.default(e, handlerParams);
            break;
        case KeyCodes.UP:
            handleSelectKeydownUp_1.default(e, handlerParams);
            break;
        case KeyCodes.SPACE:
        case KeyCodes.ENTER:
            if (state.isOpen) {
                actions.selectOption(state.focusedIndex);
            }
            else {
                actions.open(detectBodyCollision_1.default(dom, config), dom.optionHeight);
            }
            break;
        case KeyCodes.ESC:
            actions.close();
            break;
    }
}
exports.default = handleSelectKeydown;


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UP = 38;
exports.DOWN = 40;
exports.SPACE = 32;
exports.ENTER = 13;
exports.ESC = 27;


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var detectBodyCollision_1 = __webpack_require__(1);
function handleSelectKeydownDown(_a, _b) {
    var keyCode = _a.keyCode, metaKey = _a.metaKey;
    var state = _b.state, dom = _b.dom, actions = _b.actions, config = _b.config;
    var focusedIndex = state.focusedIndex > -1 ?
        state.focusedIndex : state.selectedIndex;
    var iterations = 0;
    var incrementAmount = 1;
    if (metaKey) {
        incrementAmount = Math.round(Math.max(state.totalOptions / 2, config.behavior.maxVisibleOptions));
    }
    do {
        focusedIndex += incrementAmount;
        incrementAmount = 1;
        if (focusedIndex >= state.totalOptions) {
            focusedIndex = config.behavior.loop ? 0 : state.totalOptions - 1;
        }
        actions.focusOption(focusedIndex);
        iterations++;
    } while (state.focusedOption &&
        state.focusedOption.isDisabled &&
        iterations <= state.totalOptions);
    if (state.isClosed) {
        actions.open(detectBodyCollision_1.default(dom, config), dom.optionHeight);
        return;
    }
}
exports.default = handleSelectKeydownDown;


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var detectBodyCollision_1 = __webpack_require__(1);
function handleSelectKeydownUp(_a, _b) {
    var keyCode = _a.keyCode, metaKey = _a.metaKey;
    var state = _b.state, config = _b.config, dom = _b.dom, actions = _b.actions;
    var focusedIndex = state.focusedIndex > -1 ?
        state.focusedIndex : state.selectedIndex;
    var iterations = 0;
    var incrementAmount = 1;
    if (metaKey) {
        incrementAmount = Math.round(Math.max(state.totalOptions / 2, config.behavior.maxVisibleOptions));
    }
    do {
        focusedIndex -= incrementAmount;
        incrementAmount = 1;
        if (focusedIndex < 0) {
            focusedIndex = config.behavior.loop ? state.totalOptions - 1 : 0;
        }
        actions.focusOption(focusedIndex);
        iterations++;
    } while (state.focusedOption &&
        state.focusedOption.isDisabled &&
        iterations < state.totalOptions);
    if (state.isClosed) {
        actions.open(detectBodyCollision_1.default(dom, config), dom.optionHeight);
    }
}
exports.default = handleSelectKeydownUp;


/***/ }),
/* 44 */,
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function handleWindowClick(_, _a) {
    var state = _a.state, actions = _a.actions, dom = _a.dom;
    if (!state.isOpen)
        return;
    actions.close();
    dom.select.blur();
}
exports.default = handleWindowClick;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var POLL_INTERVAL_DURATION = 100;
function pollForSelectChange(selectElement, state, actions) {
    var lastValue = selectElement.value;
    var pollIntervalId = window.setInterval(function () {
        if (selectElement.value !== lastValue) {
            var selectedIndex = state.getOptionIndexFromValue(selectElement.value);
            actions.selectOption(selectedIndex);
        }
        lastValue = selectElement.value;
    }, POLL_INTERVAL_DURATION);
    return pollIntervalId;
}
exports.default = pollForSelectChange;


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var closestParent_1 = __webpack_require__(8);
var createDomElementFromHtml_1 = __webpack_require__(48);
var root_1 = __webpack_require__(49);
var Dom_1 = __webpack_require__(56);
var domDiff_1 = __webpack_require__(57);
var domPatch_1 = __webpack_require__(59);
var Renderer = /** @class */ (function () {
    function Renderer(classNames) {
        this.dom = new Dom_1.default();
        this.classNames = classNames;
    }
    Renderer.prototype.render = function (state, selectElement) {
        var html = root_1.default(state, this.classNames);
        this.dom.root = createDomElementFromHtml_1.default(html);
        this.dom.select = selectElement;
        this.dom.form = closestParent_1.default(selectElement, 'form');
        this.mount(selectElement);
        return this.dom;
    };
    Renderer.prototype.update = function (state, key) {
        var nextHtml = root_1.default(state, this.classNames);
        var nextRoot = createDomElementFromHtml_1.default(nextHtml);
        var diffCommand = domDiff_1.default(this.dom.root, nextRoot);
        domPatch_1.default(this.dom.root, diffCommand);
        if (key === 'selectedIndex') {
            this.syncSelectWithValue(state.value);
        }
    };
    Renderer.prototype.destroy = function () {
        this.dom.root.parentElement.replaceChild(this.dom.select, this.dom.root.parentElement);
    };
    Renderer.prototype.mount = function (selectElement) {
        var parent = selectElement.parentElement;
        if (!parent)
            throw new Error('[EasyDropDown] The provided `<select>` element must exist within a document');
        parent.replaceChild(this.dom.root, selectElement);
        Object
            .keys(this.dom)
            .reduce(function (localDom, ref) {
            var selector = "[data-ref=\"" + ref + "\"]";
            var elements = localDom.root.querySelectorAll(selector);
            if (elements.length < 1 || ref === 'root')
                return localDom;
            var element = elements[0];
            if (ref === 'select') {
                element.parentElement.replaceChild(selectElement, element);
                selectElement.className = element.className;
                return localDom;
            }
            var value = localDom[ref];
            if (value === null) {
                localDom[ref] = element;
            }
            else if (Array.isArray(value)) {
                Array.prototype.push.apply(value, elements);
            }
            return localDom;
        }, this.dom);
    };
    Renderer.prototype.syncSelectWithValue = function (value) {
        if (this.dom.select.value === value)
            return;
        var event = new CustomEvent('change', {
            bubbles: true
        });
        this.dom.select.value = value;
        this.dom.select.dispatchEvent(event);
    };
    return Renderer;
}());
exports.default = Renderer;


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var createDomElementFromHtml = function (html) {
    var temp = document.createElement('div');
    temp.innerHTML = html;
    return temp.firstElementChild;
};
exports.default = createDomElementFromHtml;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var composeClassName_1 = __webpack_require__(2);
var body_1 = __webpack_require__(50);
var head_1 = __webpack_require__(53);
var root = function (state, classNames) {
    var className = composeClassName_1.default([
        classNames.root,
        [state.isDisabled, classNames.rootDisabled],
        [state.isInvalid, classNames.rootInvalid],
        [state.isOpen, classNames.rootOpen],
        [state.isFocused, classNames.rootFocused],
        [state.hasValue, classNames.rootHasValue],
        [state.isOpenAbove, classNames.rootOpenAbove],
        [state.isOpenBelow, classNames.rootOpenBelow]
    ]);
    return ("\n        <div class=\"" + className + "\">\n            " + head_1.default(state, classNames) + "\n            " + body_1.default(state, classNames) + "\n        </div>\n    ");
};
exports.default = root;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var composeClassName_1 = __webpack_require__(2);
var group_1 = __webpack_require__(51);
function body(state, classNames) {
    var className = composeClassName_1.default([
        classNames.body,
        [state.isAtTop, classNames.bodyAtTop],
        [state.isAtBottom, classNames.bodyAtBottom]
    ]);
    return ("\n        <div class=\"" + className + "\" data-ref=\"body\" style=\"max-height: " + state.maxBodyHeight + "px;\">\n            <div class=\"" + classNames.itemsList + "\" data-ref=\"itemsList\">\n                " + state.groups.map(function (groupState) { return group_1.default(groupState, state, classNames); }).join('') + "\n            </div>\n        </div>\n    ");
}
exports.default = body;


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var composeClassName_1 = __webpack_require__(2);
var option_1 = __webpack_require__(52);
var group = function (groupState, state, classNames) {
    var className = composeClassName_1.default([
        classNames.group,
        [groupState.isDisabled, classNames.groupDisabled],
        [groupState.hasLabel, classNames.groupHasLabel]
    ]);
    return ("\n        <div class=\"" + className + "\" data-ref=\"group\">\n            " + (groupState.hasLabel ?
        "<div class=\"" + classNames.groupLabel + "\">" + groupState.label + "</div>" : '') + "\n            " + groupState.options.map(function (optionState) { return option_1.default(optionState, state, classNames); }).join('') + "\n        </div>\n    ");
};
exports.default = group;


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var composeClassName_1 = __webpack_require__(2);
function option(optionState, state, classNames) {
    var className = composeClassName_1.default([
        classNames.option,
        [optionState === state.selectedOption, classNames.optionSelected],
        [optionState === state.focusedOption, classNames.optionFocused],
        [optionState.isDisabled, classNames.optionDisabled]
    ]);
    return "<div class=\"" + className + "\" data-ref=\"option\" title=\"" + optionState.label + "\">" + optionState.label + "</div>";
}
exports.default = option;


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var arrow_1 = __webpack_require__(54);
var value_1 = __webpack_require__(55);
var head = function (state, classNames) { return ("\n    <div class=\"" + classNames.head + "\" data-ref=\"head\">\n        " + value_1.default(state, classNames) + "\n        " + arrow_1.default(state, classNames) + "\n        <select class=\"" + classNames.select + "\" data-ref=\"select\"></select>\n    </div>\n"); };
exports.default = head;


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var arrow = function (_, classNames) { return "<div class=\"" + classNames.arrow + "\"></div>"; };
exports.default = arrow;


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var value = function (state, classNames) {
    return ("\n        <div class=\"" + classNames.value + "\" data-ref=\"label\">\n            " + state.humanReadableValue + "\n        </div>\n    ");
};
exports.default = value;


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Dom = /** @class */ (function () {
    function Dom() {
        this.form = null;
        this.select = null;
        this.root = null;
        this.head = null;
        this.label = null;
        this.body = null;
        this.arrow = null;
        this.itemsList = null;
        this.group = [];
        this.option = [];
    }
    Object.defineProperty(Dom.prototype, "firstOption", {
        get: function () {
            return this.option[0] || null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Dom.prototype, "optionHeight", {
        get: function () {
            if (!this.firstOption)
                return -1;
            return this.firstOption.clientHeight;
        },
        enumerable: true,
        configurable: true
    });
    return Dom;
}());
exports.default = Dom;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var AttributeChangeType_1 = __webpack_require__(11);
var DomChangeType_1 = __webpack_require__(12);
var DiffCommand_1 = __webpack_require__(58);
function domDiff(prev, next) {
    var totalChildNodes = -1;
    var command = new DiffCommand_1.default();
    if (prev instanceof HTMLSelectElement) {
        command.type = DomChangeType_1.default.NONE;
        return command;
    }
    if (prev instanceof Text && next instanceof Text) {
        if (prev.textContent === next.textContent) {
            command.type = DomChangeType_1.default.NONE;
        }
        else {
            command.type = DomChangeType_1.default.INNER;
            command.newTextContent = next.textContent;
        }
    }
    else if (prev instanceof HTMLElement && next instanceof HTMLElement) {
        if (prev.tagName !== next.tagName) {
            command.type = DomChangeType_1.default.REPLACE;
            command.newNode = next;
        }
        else if (prev.outerHTML === next.outerHTML) {
            command.type = DomChangeType_1.default.NONE;
        }
        else if (prev.innerHTML === next.innerHTML) {
            Object.assign(command, diffAttributeChanges(prev, next));
        }
        else if (prev.innerHTML !== next.innerHTML) {
            Object.assign(command, diffAttributeChanges(prev, next));
            if (command.attributeChanges.length > 0) {
                command.type = DomChangeType_1.default.FULL;
            }
            else {
                command.type = DomChangeType_1.default.INNER;
            }
            if ((totalChildNodes = prev.childNodes.length) > 0 && totalChildNodes === next.childNodes.length) {
                for (var i = 0, childNode = void 0; (childNode = prev.childNodes[i]); i++) {
                    command.childCommands.push(domDiff(childNode, next.childNodes[i]));
                }
            }
            else {
                command.newInnerHtml = next.innerHTML;
            }
        }
    }
    else {
        command.type = DomChangeType_1.default.REPLACE;
        command.newNode = next;
    }
    return command;
}
function diffAttributeChanges(prev, next) {
    var totalAttributes = Math.max(prev.attributes.length, next.attributes.length);
    var attributesMap = {};
    var undef = void (0);
    var attributeChanges = [];
    for (var i = 0; i < totalAttributes; i++) {
        var attr1 = prev.attributes[i];
        var attr2 = next.attributes[i];
        if (attr1 && attributesMap[attr1.name] === undef) {
            attributesMap[attr1.name] = [];
        }
        if (attr2 && attributesMap[attr2.name] === undef) {
            attributesMap[attr2.name] = [];
        }
        if (attr1)
            attributesMap[attr1.name][0] = attr1.value;
        if (attr2)
            attributesMap[attr2.name][1] = attr2.value;
    }
    var keys = Object.keys(attributesMap);
    if (keys.length > 1) {
        keys.sort();
    }
    for (var i = 0, key = void 0; (key = keys[i]); i++) {
        var attr = attributesMap[key];
        var change = {
            type: null,
            name: key,
            value: null
        };
        if (attr[0] === attr[1])
            continue;
        if (attr[0] === undef) {
            change.type = AttributeChangeType_1.default.ADD;
            change.value = attr[1];
        }
        else if (attr[1] === undef) {
            change.type = AttributeChangeType_1.default.REMOVE,
                change.value = '';
        }
        else {
            change.type = AttributeChangeType_1.default.EDIT,
                change.value = attr[1];
        }
        attributeChanges.push(change);
    }
    return {
        type: DomChangeType_1.default.OUTER,
        attributeChanges: attributeChanges
    };
}
exports.default = domDiff;


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DiffCommand = /** @class */ (function () {
    function DiffCommand() {
        this.newNode = null;
        this.newInnerHtml = '';
        this.newTextContent = '';
        this.attributeChanges = [];
        this.childCommands = [];
        this.index = null;
    }
    return DiffCommand;
}());
exports.default = DiffCommand;


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var AttributeChangeType_1 = __webpack_require__(11);
var DomChangeType_1 = __webpack_require__(12);
function domPatch(node, command) {
    switch (command.type) {
        case DomChangeType_1.default.NONE:
            return node;
        case DomChangeType_1.default.REPLACE:
            node.parentElement.replaceChild(command.newNode, node);
            return command.newNode;
        case DomChangeType_1.default.INNER:
            if (node instanceof Text) {
                node.textContent = command.newTextContent;
            }
            else if (command.childCommands.length > 0) {
                command.childCommands.forEach(function (childCommand, i) { return domPatch(node.childNodes[i], childCommand); });
            }
            else if (node instanceof HTMLElement) {
                node.innerHTML = command.newInnerHtml;
            }
            return node;
        case DomChangeType_1.default.OUTER:
            patchAttributes(node, command.attributeChanges);
            return node;
        case DomChangeType_1.default.FULL:
            if (command.childCommands.length > 0) {
                command.childCommands.forEach(function (childCommand, i) { return domPatch(node.childNodes[i], childCommand); });
            }
            else if (node instanceof HTMLElement && command.newInnerHtml !== '') {
                node.innerHTML = command.newInnerHtml;
            }
            patchAttributes(node, command.attributeChanges);
            return node;
    }
}
function patchAttributes(el, attributeChanges) {
    var raf = null;
    if (typeof window.requestAnimationFrame !== 'undefined') {
        raf = window.requestAnimationFrame;
    }
    attributeChanges.forEach(function (change) {
        if (raf && ['class', 'style'].indexOf(change.name) > -1) {
            raf(function () { return patchAttribute(el, change); });
        }
        else {
            patchAttribute(el, change);
        }
    });
}
function patchAttribute(el, change) {
    switch (change.type) {
        case AttributeChangeType_1.default.ADD:
        case AttributeChangeType_1.default.EDIT:
            el.setAttribute(change.name, change.value);
            break;
        case AttributeChangeType_1.default.REMOVE:
            el.removeAttribute(change.name);
            break;
    }
}
exports.default = domPatch;


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var resolveActions_1 = __webpack_require__(61);
var StateManager = /** @class */ (function () {
    function StateManager() {
    }
    StateManager.proxyActions = function (state, injectedActions, onAction) {
        var stateProxy = StateManager.createStateProxy(state, onAction);
        var actions = resolveActions_1.default(stateProxy);
        Object.assign(actions, injectedActions);
        return actions;
    };
    StateManager.createStateProxy = function (state, onAction) {
        return Object.seal(StateManager
            .getPropertyDescriptorsFromValue(state, onAction)
            .reduce(function (proxy, _a) {
            var key = _a.key, get = _a.get, set = _a.set;
            return Object.defineProperty(proxy, key, {
                enumerable: true,
                get: get,
                set: set
            });
        }, {}));
    };
    StateManager.getPropertyDescriptorsFromValue = function (state, onAction) {
        var prototype = Object.getPrototypeOf(state);
        var allKeys = Object.keys(state).concat(Object.keys(prototype));
        return allKeys
            .reduce(function (localDescriptors, key) {
            var propertyDescriptor = Object.getOwnPropertyDescriptor(state, key) ||
                Object.getOwnPropertyDescriptor(prototype, key);
            var isAccessorProperty = typeof propertyDescriptor.get === 'function';
            localDescriptors.push({
                get: StateManager.readPropertyValue.bind(null, state, key),
                set: isAccessorProperty ?
                    void 0 : StateManager.updatePropertyValue.bind(null, state, key, onAction),
                key: key
            });
            return localDescriptors;
        }, []);
    };
    StateManager.readPropertyValue = function (state, key) {
        return state[key];
    };
    StateManager.updatePropertyValue = function (state, key, onAction, value) {
        if (state[key] === value)
            return;
        state[key] = value;
        onAction(state, key);
    };
    return StateManager;
}());
exports.default = StateManager;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var BodyStatus_1 = __webpack_require__(13);
var CollisionType_1 = __webpack_require__(10);
var ScrollStatus_1 = __webpack_require__(14);
var resolveActions = function (state) { return ({
    focus: function () {
        state.isFocused = true;
    },
    blur: function () {
        state.isFocused = false;
    },
    invalidate: function () {
        state.isInvalid = true;
    },
    validate: function () {
        state.isInvalid = false;
    },
    topOut: function () {
        state.scrollStatus = ScrollStatus_1.default.AT_TOP;
    },
    bottomOut: function () {
        state.scrollStatus = ScrollStatus_1.default.AT_BOTTOM;
    },
    scroll: function () {
        state.scrollStatus = ScrollStatus_1.default.SCROLLED;
    },
    open: function (collision, optionHeight) {
        state.optionHeight = optionHeight;
        this.closeOthers();
        this.scrollToView(state);
        switch (collision) {
            case CollisionType_1.default.NONE:
            case CollisionType_1.default.TOP:
                state.bodyStatus = BodyStatus_1.default.OPEN_BELOW;
                break;
            case CollisionType_1.default.BOTTOM:
                state.bodyStatus = BodyStatus_1.default.OPEN_ABOVE;
                break;
        }
    },
    close: function () {
        state.bodyStatus = BodyStatus_1.default.CLOSED;
        state.focusedIndex = -1;
    },
    selectOption: function (index) {
        state.selectedIndex = index;
        if (state.isInvalid) {
            this.validate();
        }
        if (state.isSearching) {
            this.scrollToView(state);
        }
        else {
            this.close();
        }
    },
    focusOption: function (index) {
        state.focusedIndex = index;
        this.scrollToView(state);
    },
    search: function () {
        state.isSearching = true;
    },
    resetSearch: function () {
        state.isSearching = false;
    }
}); };
exports.default = resolveActions;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Group_1 = __webpack_require__(15);
var Option_1 = __webpack_require__(16);
var State_1 = __webpack_require__(63);
var StateMapper = /** @class */ (function () {
    function StateMapper() {
    }
    StateMapper.mapFromSelect = function (selectElement, config) {
        var state = new State_1.default(null, config);
        var isWithinGroup = false;
        state.name = selectElement.name;
        state.isDisabled = selectElement.disabled;
        for (var i = 0, child = void 0; (child = selectElement.children[i]); i++) {
            if (i === 0 && child.getAttribute('data-placeholder') !== null) {
                state.placeholder = child.textContent;
                child.value = '';
                continue;
            }
            if (child instanceof HTMLOptionElement) {
                if (isWithinGroup === false) {
                    state.groups.push(StateMapper.mapGroup());
                    isWithinGroup = true;
                }
                state.lastGroup.options.push(StateMapper.mapOption(child));
                if (child.selected)
                    state.selectedIndex = state.totalOptions - 1;
            }
            else if (child instanceof HTMLOptGroupElement) {
                isWithinGroup = true;
                state.groups.push(StateMapper.mapGroup(child));
                for (var j = 0, groupChild = void 0; (groupChild = child.children[j]); j++) {
                    state.lastGroup.options.push(StateMapper.mapOption(groupChild));
                    if (groupChild.selected)
                        state.selectedIndex = state.totalOptions - 1;
                }
                isWithinGroup = false;
            }
        }
        return Object.seal(state);
    };
    StateMapper.mapGroup = function (group) {
        if (group === void 0) { group = null; }
        return Object.assign(new Group_1.default(), {
            label: group ? group.label : '',
            isDisabled: group ? group.disabled : false
        });
    };
    StateMapper.mapOption = function (option) {
        if (!(option instanceof HTMLOptionElement))
            throw new TypeError('[EasyDropDown] Invalid markup structure');
        return Object.assign(new Option_1.default(), {
            label: option.textContent,
            value: option.value || option.textContent,
            isDisabled: option.disabled
        });
    };
    return StateMapper;
}());
exports.default = StateMapper;


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Config_1 = __webpack_require__(7);
var BodyStatus_1 = __webpack_require__(13);
var ScrollStatus_1 = __webpack_require__(14);
var Group_1 = __webpack_require__(15);
var Option_1 = __webpack_require__(16);
var assign = Object.assign;
var State = /** @class */ (function () {
    function State(stateRaw, config) {
        if (stateRaw === void 0) { stateRaw = null; }
        if (config === void 0) { config = new Config_1.default(); }
        this.groups = [];
        this.focusedIndex = -1;
        this.selectedIndex = -1;
        this.optionHeight = -1;
        this.name = '';
        this.placeholder = 'Select';
        this.scrollStatus = ScrollStatus_1.default.AT_TOP;
        this.bodyStatus = BodyStatus_1.default.CLOSED;
        this.isDisabled = false;
        this.isInvalid = false;
        this.isFocused = false;
        this.isScrollingToView = false;
        this.isSearching = false;
        this.config = config;
        if (!stateRaw)
            return;
        assign(this, stateRaw);
        this.groups = this.groups.map(function (groupRaw) {
            var group = assign(new Group_1.default(), groupRaw);
            group.options = group.options.map(function (optionRaw) { return assign(new Option_1.default(), optionRaw); });
            return group;
        });
    }
    Object.defineProperty(State.prototype, "totalGroups", {
        get: function () {
            return this.groups.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "lastGroup", {
        get: function () {
            return this.groups[this.groups.length - 1];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "totalOptions", {
        get: function () {
            return this.groups.reduce(function (total, group) { return total + group.totalOptions; }, 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "selectedOption", {
        get: function () {
            return this.getOptionFromIndex(this.selectedIndex);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "focusedOption", {
        get: function () {
            return this.getOptionFromIndex(this.focusedIndex);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "value", {
        get: function () {
            return this.selectedOption ? this.selectedOption.value : '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "humanReadableValue", {
        get: function () {
            if (!this.hasValue ||
                (this.config.behavior.showPlaceholderOnOpen &&
                    this.hasPlaceholder &&
                    this.isOpen)) {
                return this.placeholder;
            }
            return this.label;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "label", {
        get: function () {
            return this.selectedOption ? this.selectedOption.label : '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "hasPlaceholder", {
        get: function () {
            return this.placeholder !== '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "hasValue", {
        get: function () {
            return this.value !== '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "isGrouped", {
        get: function () {
            return Boolean(this.groups.find(function (group) { return group.hasLabel; }));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "isOpen", {
        get: function () {
            return this.bodyStatus !== BodyStatus_1.default.CLOSED;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "isClosed", {
        get: function () {
            return this.bodyStatus === BodyStatus_1.default.CLOSED;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "isOpenAbove", {
        get: function () {
            return this.bodyStatus === BodyStatus_1.default.OPEN_ABOVE;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "isOpenBelow", {
        get: function () {
            return this.bodyStatus === BodyStatus_1.default.OPEN_BELOW;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "isAtTop", {
        get: function () {
            return this.scrollStatus === ScrollStatus_1.default.AT_TOP;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "isAtBottom", {
        get: function () {
            return this.scrollStatus === ScrollStatus_1.default.AT_BOTTOM;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(State.prototype, "maxBodyHeight", {
        get: function () {
            return Math.max(0, this.optionHeight * this.config.behavior.maxVisibleOptions);
        },
        enumerable: true,
        configurable: true
    });
    State.prototype.getOptionFromIndex = function (index) {
        var groupStartIndex = 0;
        for (var _i = 0, _a = this.groups; _i < _a.length; _i++) {
            var group = _a[_i];
            if (index < 0)
                break;
            var groupEndIndex = Math.max(0, groupStartIndex + group.totalOptions - 1);
            if (index <= groupEndIndex) {
                var option = group.options[index - groupStartIndex];
                return option;
            }
            groupStartIndex += group.totalOptions;
        }
        return null;
    };
    State.prototype.getOptionIndexFromValue = function (value) {
        var index = -1;
        for (var _i = 0, _a = this.groups; _i < _a.length; _i++) {
            var group = _a[_i];
            for (var _b = 0, _c = group.options; _b < _c.length; _b++) {
                var option = _c[_b];
                index++;
                if (option.value === value) {
                    return index;
                }
            }
        }
        return -1;
    };
    return State;
}());
exports.default = State;


/***/ }),
/* 64 */,
/* 65 */,
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var EasydropdownFacade = /** @class */ (function () {
    function EasydropdownFacade(implementation) {
        this.open = implementation.open.bind(implementation);
        this.close = implementation.close.bind(implementation);
        this.destroy = implementation.destroy.bind(implementation);
    }
    return EasydropdownFacade;
}());
exports.default = EasydropdownFacade;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var helpful_merge_1 = __webpack_require__(19);
var Config_1 = __webpack_require__(7);
var EventManager_1 = __webpack_require__(26);
var pollForSelectChange_1 = __webpack_require__(46);
var detectBodyCollision_1 = __webpack_require__(1);
var Renderer_1 = __webpack_require__(47);
var closeOthers_1 = __webpack_require__(72);
var scrollToView_1 = __webpack_require__(73);
var StateManager_1 = __webpack_require__(60);
var StateMapper_1 = __webpack_require__(62);
var cache_1 = __webpack_require__(4);
var Timers_1 = __webpack_require__(69);
var Easydropdown = /** @class */ (function () {
    function Easydropdown(selectElement, options) {
        this.config = helpful_merge_1.default(new Config_1.default(), options);
        this.state = StateMapper_1.default.mapFromSelect(selectElement, this.config);
        this.renderer = new Renderer_1.default(this.config.classNames);
        this.dom = this.renderer.render(this.state, selectElement);
        this.timers = new Timers_1.default();
        this.actions = StateManager_1.default.proxyActions(this.state, {
            closeOthers: closeOthers_1.default.bind(null, this, cache_1.default),
            scrollToView: scrollToView_1.default.bind(null, this.dom, this.timers)
        }, this.renderer.update.bind(this.renderer));
        this.eventBindings = EventManager_1.default.bindEvents({
            actions: this.actions,
            config: this.config,
            dom: this.dom,
            state: this.state,
            timers: this.timers
        });
        this.timers.pollIntervalId = pollForSelectChange_1.default(this.dom.select, this.state, this.actions);
    }
    Object.defineProperty(Easydropdown.prototype, "selectElement", {
        get: function () {
            return this.dom.select;
        },
        enumerable: true,
        configurable: true
    });
    Easydropdown.prototype.open = function () {
        this.actions.open(detectBodyCollision_1.default(this.dom, this.config), this.dom.optionHeight);
    };
    Easydropdown.prototype.close = function () {
        this.actions.close();
    };
    Easydropdown.prototype.destroy = function () {
        this.eventBindings.forEach(function (binding) { return binding.unbind(); });
        this.renderer.destroy();
        this.timers.clear();
    };
    return Easydropdown;
}());
exports.default = Easydropdown;


/***/ }),
/* 68 */,
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Timers = /** @class */ (function () {
    function Timers() {
    }
    Timers.prototype.clear = function () {
        var _this = this;
        Object.keys(this).forEach(function (key) { return window.clearInterval(_this[key]); });
    };
    return Timers;
}());
exports.default = Timers;


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SEARCH_RESET_DURATION = 1200;
function handleSelectKeypress(e, handlerParams) {
    var actions = handlerParams.actions, timers = handlerParams.timers;
    clearTimeout(timers.searchTimoutId);
    actions.search();
    timers.searchTimoutId = window.setTimeout(function () { return actions.resetSearch(); }, SEARCH_RESET_DURATION);
}
exports.default = handleSelectKeypress;


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function handleSelectInvalid(e, _a) {
    var actions = _a.actions, config = _a.config, dom = _a.dom;
    actions.invalidate();
}
exports.default = handleSelectInvalid;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function closeOthers(thisInstance, cache) {
    for (var _i = 0, cache_1 = cache; _i < cache_1.length; _i++) {
        var instance = cache_1[_i];
        if (instance !== thisInstance)
            instance.actions.close();
    }
}
exports.default = closeOthers;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function scrollToView(dom, timers, state) {
    var index = Math.max(0, state.focusedIndex > -1 ? state.focusedIndex : state.selectedIndex);
    var option = dom.option[index];
    var offsetTop = option.offsetTop, offsetHeight = option.offsetHeight;
    var min = dom.body.scrollTop;
    var max = min + state.maxBodyHeight;
    var remainder;
    if (offsetTop < min) {
        dom.body.scrollTop = offsetTop;
    }
    else if ((remainder = (offsetTop + offsetHeight) - max) > 0) {
        dom.body.scrollTop = dom.body.scrollTop + remainder;
    }
    else {
        return;
    }
    state.isScrollingToView = true;
    clearTimeout(timers.scrollTimeoutId);
    timers.scrollTimeoutId = window.setTimeout(function () { return state.isScrollingToView = false; }, 100);
}
exports.default = scrollToView;


/***/ })
/******/ ]);
});
//# sourceMappingURL=easydropdown.js.map